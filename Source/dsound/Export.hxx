/*
Copyright (c) 2024 Eugene Kirian

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
*/

#pragma once

#include "Base.hxx"

#define DIRECT_SOUND_DIRECT_SOUND_CAPTURE_CREATE_NAME "DirectSoundCaptureCreate"
#define DIRECT_SOUND_DIRECT_SOUND_CAPTURE_CREATE_8_NAME "DirectSoundCaptureCreate8"
#define DIRECT_SOUND_DIRECT_SOUND_CAPTURE_ENUMERATE_A_NAME "DirectSoundCaptureEnumerateA"
#define DIRECT_SOUND_DIRECT_SOUND_CAPTURE_ENUMERATE_W_NAME "DirectSoundCaptureEnumerateW"
#define DIRECT_SOUND_DIRECT_SOUND_CREATE_NAME "DirectSoundCreate"
#define DIRECT_SOUND_DIRECT_SOUND_CREATE_8_NAME "DirectSoundCreate8"
#define DIRECT_SOUND_DIRECT_SOUND_ENUMERATE_A_NAME "DirectSoundEnumerateA"
#define DIRECT_SOUND_DIRECT_SOUND_ENUMERATE_W_NAME "DirectSoundEnumerateW"
#define DIRECT_SOUND_DIRECT_SOUND_FULL_DUPLEX_CREATE_NAME "DirectSoundFullDuplexCreate"
#define DIRECT_SOUND_DLL_CAN_UNLOAD_NOW_NAME "DllCanUnloadNow"
#define DIRECT_SOUND_DLL_GET_CLASS_OBJECT_NAME "DllGetClassObject"
#define DIRECT_SOUND_GET_DEVICE_ID_NAME "GetDeviceID"

typedef HRESULT(WINAPI* LPDIRECTSOUNDCAPTURECREATE)(LPCGUID lpcGUID, LPDIRECTSOUNDCAPTURE* lplpDSC, LPUNKNOWN pUnkOuter);
typedef HRESULT(WINAPI* LPDIRECTSOUNDCAPTURECREATE8)(LPCGUID lpcGUID, LPDIRECTSOUNDCAPTURE8* lplpDSC, LPUNKNOWN pUnkOuter);
typedef HRESULT(WINAPI* LPDIRECTSOUNDCAPTUREENUMERATEA)(LPDSENUMCALLBACKA lpDSEnumCallback, LPVOID lpContext);
typedef HRESULT(WINAPI* LPDIRECTSOUNDCAPTUREENUMERATEW)(LPDSENUMCALLBACKW lpDSEnumCallback, LPVOID lpContext);
typedef HRESULT(WINAPI* LPDIRECTSOUNDCREATE)(LPCGUID lpcGuid, LPDIRECTSOUND* ppDS, LPUNKNOWN pUnkOuter);
typedef HRESULT(WINAPI* LPDIRECTSOUNDCREATE8)(LPCGUID lpcGuidDevice, LPDIRECTSOUND8* ppDS8, LPUNKNOWN pUnkOuter);
typedef HRESULT(WINAPI* LPDIRECTSOUNDENUMERATEA)(LPDSENUMCALLBACKA lpDSEnumCallback, LPVOID lpContext);
typedef HRESULT(WINAPI* LPDIRECTSOUNDENUMERATEW)(LPDSENUMCALLBACKW lpDSEnumCallback, LPVOID lpContext);
typedef HRESULT(WINAPI* LPDIRECTSOUNDFULLDUPLEXCREATE)(LPCGUID pcGuidCaptureDevice, LPCGUID pcGuidRenderDevice, LPCDSCBUFFERDESC pcDSCBufferDesc, LPCDSBUFFERDESC pcDSBufferDesc, HWND hWnd, DWORD dwLevel, LPDIRECTSOUNDFULLDUPLEX* ppDSFD, LPDIRECTSOUNDCAPTUREBUFFER8* ppDSCBuffer8, LPDIRECTSOUNDBUFFER8* ppDSBuffer8, LPUNKNOWN pUnkOuter);
typedef HRESULT(WINAPI* LPDLLCANUNLOADNOW)(VOID);
typedef HRESULT(WINAPI* LPDLLGETCLASSOBJECT)(REFCLSID rclsid, REFIID riid, LPVOID* ppv);
typedef HRESULT(WINAPI* LPGETDEVICEID)(LPCGUID pGuidSrc, LPGUID pGuidDest);